{
    "mec_service_mgmt": 
        {
            "applications":
            {
                    "services":
                    {
                        "serviceId":
                        {
                            "200":
                            {
                                "txt": " Upon success, a response body containing an array of the mecServices is returned."
            
                            },
                            "400":
                            {  
                                "txt": "It is used to indicate that incorrect parameters were passed to the request. ola service ID"
            
                            },
                            "404":
                            {
                                "txt":"It is used when a client provided a URI that cannot be mapped to a valid resource URI.  "
            
                            },
                            "403":
                            {
                                "txt": "The operation is not allowed given the current status of the resource. "
            
                            },
                            "example":
                            {   
                                "txt":"def getServiceID(ip,appinstance,service,email):\n  url=\"http://0.0.0.0:8000/\"+email+\"/mec_service_mgmt/v1/applications/asd/services/123\"\n  url=url.replace(\"0.0.0.0:8000\",ip)\n  url=url.replace(\"asd\",appinstance)\n  url=url.replace(\"123\",service)\n  req=requests.get(url)\n  print(req)\n  print(req.content)"
                            }

                        },
                        "200":
                        {
                            "txt": " Upon success, a response body containing an array of the mecServices is returned."
                            
                        },
                        "400":
                        {  
                            "txt": "It is used to indicate that incorrect parameters werepassed to the request. ola service"
        
                        },
                        "404":
                        {
                            "txt":"It is used when a client provided a URI that cannot be mapped to a valid resource URI.  "
        
                        },
                        "403":
                        {
                            "txt": "The operation is not allowed given the current status of the resource. "
        
                        },
                        "414":
                        {
                            "txt":"It is used to indicate that the server is refusing to process the request because the request URI is longer than the server is willing or able to process. "
                        },
                        "example":
                        {   
                            "txt":" "
                        }
                    },
                    "subscriptions":
                    {
                        "subscriptionId":
                        {
                            "200":
                            {
                                "txt": " Upon success, a response body containing the requested subscription is returned. "
            
                            },
                            "400":
                            {  
                                "txt": "It is used to indicate that incorrect parameters were passed to the request."
            
                            },
                            "404":
                            {
                                "txt":"It is used when a client provided a URI that cannot be mapped to a valid resource URI.  "
            
                            },
                            "403":
                            {
                                "txt": "The operation is not allowed given the current status of the resource. "
            
                            },
                            "example":
                            {   
                                "txt":"def getSubscriptionsIDserv(ip,appinstance,subs,email):\n  url=\"http://0.0.0.0:8000/\"+email+\"/mec_service_mgmt/v1/applications/asd/subscriptions/subs\"\n  url=url.replace(\"0.0.0.0:8000\",ip)\n  url=url.replace(\"asd\",appinstance)\n  url=url.replace(\"subs\",subs)\n  req=requests.get(url)\n  print(req)\n  print(req.content)"
                            }

                        },
                        "200":
                        {
                            "txt": " Upon success, a response body containing the list of links to the requested subscriptions is returned. "
        
                        },
                        "400":
                        {  
                            "txt": "It is used to indicate that incorrect parameters were passed to the request."
        
                        },
                        "404":
                        {
                            "txt":"It is used when a client provided a URI that cannot be mapped to a valid resource URI.  "
        
                        },
                        "403":
                        {
                            "txt": "The operation is not allowed given the current status of the resource. "
        
                        },
                        "example":
                        {   
                            "txt":"def getSubscriptionsserv(ip,appinstance,email):\n  url=\"http://0.0.0.0:8000/\"+email+\"/mec_service_mgmt/v1/applications/asd/subscriptions\"\n  url=url.replace(\"0.0.0.0:8000\",ip)\n  url=url.replace(\"asd\",appinstance)\n  req=requests.get(url)\n  print(req)\n  print(req.content)"
                        }
                    }
                

             
            },
            "services":
            {
                "serviceId":
                {
                    "200": 
                    {
                        "txt":"It is used to indicate nonspecific success. The response body contains a representation of the resource."
                    },
                    "400":
                    {
                        "txt":"Bad Request. It is used to indicate that incorrect parameters were passed to the request. "
                    },
                    "403":
                    {
                        "txt":" Forbidden. The operation is not allowed given the current status of the resource."
                    },
                    "404":
                    {
                        "txt":"Not Found. It is used when a client provided a URI that cannot be mapped to a valid resource URI. "
                    },
                    "example":
                    {   
                        "txt":"def getServiceID(ip,appinstance,service,email):\n  url=\"http://0.0.0.0:8000/\"+email+\"/mec_service_mgmt/v1/applications/asd/services/123\"\n  url=url.replace(\"0.0.0.0:8000\",ip)\n  url=url.replace(\"asd\",appinstance)\n  url=url.replace(\"123\",service)\n  req=requests.get(url)\n  print(req)\n  print(req.content)"
                    }

                },
                "200": 
                {
                    "txt":"It is used to indicate nonspecific success. The response body contains a representation of the resource."
    

                },
                "400":
                {
                    "txt":"Bad Request. It is used to indicate that incorrect parameters were passed to the request. asd"
                },
                "403":
                {
                    "txt":" Forbidden. The operation is not allowed given the current status of the resource."
                },
                "404":
                {
                    "txt":"Not Found. It is used when a client provided a URI that cannot be mapped to a valid resource URI. "
                },
                "414":
                {
                    "txt":"It is used to indicate that the server is refusing to process the request because the request URI is longer than the server is willing or able to process."
                },
                "example":
                {   
                    "txt":"def getServices(ip,email):\n  url=\"http://0.0.0.0:8000/\"+email+\"/mec_service_mgmt/v1/services\"\n  url=url.replace(\"0.0.0.0:8000\",ip)\n  req=requests.get(url)\n  print(req)\n  \n  print(req.content)"
                }  
                 
            },
            "transports":
            {
                "200":
                {
                    "txt": " success"

                },
                "400":
                {  
                    "txt": "It is used to indicate that incorrect parameters were passed to the request "

                },
                "404":
                {
                    "txt":"It is used when a client provided a URI that cannot be mapped to a valid resource URI. "

                },
                "403":
                {
                    "txt": "The operation is not allowed given the current status of the resource."

                },
                "example":
                {   
                    "txt":"def getTransport(ip,email):\n  url=\"http://0.0.0.0:8000/\"+email+\"/mec_service_mgmt/v1/transports\"\n  url=url.replace(\"0.0.0.0:8000\",ip)\n  req=requests.get(url)\n  print(req)\n  print(req.content)"
                }
           


            }    
        },
 
    "mec_app_support":

        {

            "applications":
            {
                "appInstanceId":
                {
                    "traffic_rules":
                    {
                        "trafficRuleId":
                        {
                            "200":
                            {
                                "txt":"Success, a response message content containing the list of links to the requested subscriptions is returned."
                            },
                            "400":
                            {
                                "txt":"It is used to indicate that incorrect parameters were passed to the request. "
                            },
                            "404":
                            {   
                                "txt": "It is used when a client provided a URI that cannot be mapped to a valid resource URI. In the returned ProblemDetails structure, the detail attribute should convey more information about the error."
                            },
                            "403":
                            {
                                "txt": "The operation is not allowed given the current status of the resource. More information shall be provided in the detail attribute of the ProblemDetails structure"
                            },
                            "example":
                            {   
                                "txt":"def getTraffic_rulesID(ip,appinstance,trafficinstance,email):\n  url=\"http://0.0.0.0:8000/\"+email+\"/mec_app_support/v1/applications/asd/traffic_rules\"\n  url=url.replace(\"asd\",appinstance)\n  url=url.replace(\"rule\",trafficinstance)\n  url=url.replace(\"0.0.0.0:8000\",ip)\n  req=requests.get(url)\n  print(req)\n  print(req.content)"
                            }
                        },
                        "200":
                        {
                            "txt":"Success, a response message content containing the list of links to the requested subscriptions is returned."
                        },
                        "400":
                        {
                            "txt":"It is used to indicate that incorrect parameters were passed to the request. "
                        },
                        "404":
                        {   
                            "txt": "It is used when a client provided a URI that cannot be mapped to a valid resource URI. In the returned ProblemDetails structure, the detail attribute should convey more information about the error."
                        },
                        "403":
                        {
                            "txt": "The operation is not allowed given the current status of the resource. More information shall be provided in the detail attribute of the ProblemDetails structure"
                        },
                        "example":
                        {   
                            "txt": "def getTraffic_rules(ip,appinstance):\n  url=\"http://0.0.0.0:8000/mec_app_support/v1/applications/asd/traffic_rules\"\n  url=url.replace(\"asd\",appinstance)\n  url=url.replace(\"0.0.0.0:8000\",ip)\n  req=requests.get(url)\n  print(req)\n  print(req.content)"
                        }
                    },
                    "dns_rules":
                    {
                        "dnsRuleId":
                        {
                            "200":
                            {
                                "txt":"Success, a response message content containing the list of links to the requested subscriptions is returned."
                            },
                            "400":
                            {
                                "txt":"It is used to indicate that incorrect parameters were passed to the request. "
                            },
                            "404":
                            {   
                                "txt": "It is used when a client provided a URI that cannot be mapped to a valid resource URI. In the returned ProblemDetails structure, the detail attribute should convey more information about the error."
                            },
                            "403":
                            {
                                "txt": "The operation is not allowed given the current status of the resource. More information shall be provided in the detail attribute of the ProblemDetails structure"
                            },
                            "example":
                            {   
                                "txt":"def getDNS_rulesID(ip,appinstance,email):\n  url=\"http://0.0.0.0:8000/\"+email+\"/mec_app_support/v1/applications/asd/dns_rules/dns\"\n  url=url.replace(\"0.0.0.0:8000\",ip)\n  url=url.replace(\"asd\",appinstance)\n  req=requests.get(url)\n  print(req)\n  print(req.content)"
                            }

                        },
                        "200":
                        {
                            "txt":"Success, a response message content containing the list of links to the requested subscriptions is returned."
                        },
                        "400":
                        {
                            "txt":"It is used to indicate that incorrect parameters were passed to the request. "
                        },
                        "404":
                        {   
                            "txt": "It is used when a client provided a URI that cannot be mapped to a valid resource URI. In the returned ProblemDetails structure, the detail attribute should convey more information about the error."
                        },
                        "403":
                        {
                            "txt": "The operation is not allowed given the current status of the resource. More information shall be provided in the detail attribute of the ProblemDetails structure"
                        },
                        "example":
                        {   
                            "txt":"def getDNS_rules(ip,appinstance,email):\n  url=\"http://0.0.0.0:8000/\"+email+\"/mec_app_support/v1/applications/asd/dns_rules\"\n  url=url.replace(\"0.0.0.0:8000\",ip)\n  url=url.replace(\"asd\",appinstance)\n  req=requests.get(url)\n  print(req)\n  print(req.content)"
                        }
                    },
                    "subscriptions":
                    {   
                        "subscriptionId":
                        {
                            
                             "200":
                            {
                                "txt":"Success, a response message content containing the list of links to the requested subscriptions is returned."
                            },
                            "400":
                            {
                                 "txt":"It is used to indicate that incorrect parameters were passed to the request. "
                            },
                            "404":
                            {   
                                "txt": "It is used when a client provided a URI that cannot be mapped to a valid resource URI. In the returned ProblemDetails structure, the detail attribute should convey more  information about the error."
                            },
                            "403":
                            {
                                "txt": "The operation is not allowed given the current status of the resource. More information shall be provided in the  detail attribute of the ProblemDetails  structure"
                            },
                            "example":
                            {   
                                "txt":" "
                            }
                        
                        },
                        "200":
                        {
                            "txt":"Success, a response message content containing the list of links to the requested subscriptions is returned."
                        },
                        "400":
                        {
                            "txt":"It is used to indicate that incorrect parameters were passed to the request. "
                        },
                        "404":
                        {   
                            "txt": "It is used when a client provided a URI that cannot be mapped to a valid resource URI. In the returned ProblemDetails structure, the detail attribute should convey more information about the error."
                        },
                        "403":
                        {
                            "txt": "The operation is not allowed given the current status of the resource. More information shall be provided in the detail attribute of the ProblemDetails structure"
                        },
                        "example":
                        {   
                            "txt":"def getSubscriptions(ip,appinstance,email):\n  url=\"http://0.0.0.0:8000/\"+email+\"/mec_app_support/v1/applications/asd/subscriptions\"\n  url=url.replace(\"0.0.0.0:8000\",ip)\n  url=url.replace(\"asd\",appinstance)\n  req=requests.get(url)\n  print(req)\n  print(req.content)"
                        }
                    }
                }
            },
            "registrations":
            {
                "appInstanceId":
                {
                    "200":
                    {
                        "txt":"Success, a response message content containing the list of links to the requested subscriptions is returned."
                    },
                    "400":
                    {
                        "txt":"It is used to indicate that incorrect parameters were passed to the request. "
                    },
                    "404":
                    {   
                        "txt": "It is used when a client provided a URI that cannot be mapped to a valid resource URI. In the returned ProblemDetails structure, the detail attribute should convey more information about the error."
                    },
                    "403":
                    {
                        "txt": "The operation is not allowed given the current status of the resource. More information shall be provided in the detail attribute of the ProblemDetails structure"
                    },
                    "example":
                    {   
                        "txt": ""
                    }
                }
            },
            "timing":
            {
                "timing_caps":
                {
                    "200":
                    {
                        "txt":"Success, a response message content containing the list of links to the requested subscriptions is returned."
                    },
                    "400":
                    {
                        "txt":"It is used to indicate that incorrect parameters were passed to the request. "
                    },
                    "404":
                    {   
                        "txt": "It is used when a client provided a URI that cannot be mapped to a valid resource URI. In the returned ProblemDetails structure, the detail attribute should convey more information about the error."
                    },
                    "403":
                    {
                        "txt": "The operation is not allowed given the current status of the resource. More information shall be provided in the detail attribute of the ProblemDetails structure"
                    },
                    "example":
                    {   
                        "txt":"def getTiming_caps(ip,email):\n  url=\"http://0.0.0.0:8000/\"+email+\"/mec_app_support/v1/timing/timing_caps\"\n  url=url.replace(\"0.0.0.0:8000\",ip)\n  req=requests.get(url)\n  print(req)\n  print(req.content)"
                    
                    }
                },
                "current_time":
                {
                    "200":
                    {
                        "txt":"Success, a response message content containing the list of links to the requested subscriptions is returned."
                    },
                    "400":
                    {
                        "txt":"It is used to indicate that incorrect parameters were passed to the request. "
                    },
                    "404":
                    {   
                        "txt": "It is used when a client provided a URI that cannot be mapped to a valid resource URI. In the returned ProblemDetails structure, the detail attribute should convey more information about the error."
                    },
                    "403":
                    {
                        "txt": "The operation is not allowed given the current status of the resource. More information shall be provided in the detail attribute of the ProblemDetails structure"
                    },
                    "example":
                    {   
                        "txt":"def getCurrent_Time(ip,email):\n  url=\"http://0.0.0.0:8000/\"+email+\"/mec_app_support/v1/timing/current_time\"\n  url=url.replace(\"0.0.0.0:8000\",ip)\n  req=requests.get(url)\n  print(req)\n  print(req.content)"
                    }
                }
            }





        }
        



    


}