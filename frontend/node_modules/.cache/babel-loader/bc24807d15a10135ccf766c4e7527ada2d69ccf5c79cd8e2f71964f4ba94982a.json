{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-00015bfc\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"page-container\"\n};\nconst _hoisted_2 = {\n  class: \"left-column\"\n};\nconst _hoisted_3 = {\n  class: \"section\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"AppId\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Request\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Error Code\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Date\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"More\")])], -1 /* HOISTED */));\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = {\n  class: \"section\"\n};\nconst _hoisted_7 = {\n  class: \"section switch-section\"\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"white-text\"\n}, \"Turn On MEP\", -1 /* HOISTED */));\nconst _hoisted_9 = {\n  key: 0\n};\nconst _hoisted_10 = {\n  class: \"white-texts\"\n};\nconst _hoisted_11 = {\n  class: \"download\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_table = _resolveComponent(\"v-table\");\n  const _component_v_progress_circular = _resolveComponent(\"v-progress-circular\");\n  const _component_v_switch = _resolveComponent(\"v-switch\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_v_table, {\n    height: \"300px\"\n  }, {\n    default: _withCtx(() => [_hoisted_4, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.tableData, (item, index) => {\n      return _openBlock(), _createElementBlock(\"tr\", {\n        key: index\n      }, [_createElementVNode(\"td\", null, _toDisplayString(item.appId), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.request), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.erro), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.date), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n        onClick: $event => $options.openPopupWindow(item)\n      }, \"More\", 8 /* PROPS */, _hoisted_5)])]);\n    }), 128 /* KEYED_FRAGMENT */))])]),\n\n    _: 1 /* STABLE */\n  })])]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_createVNode(_component_v_switch, {\n    modelValue: $data.switchMe,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.switchMe = $event),\n    class: \"custom-switch\",\n    onInput: $options.handleSwitchChange\n  }, {\n    label: _withCtx(() => [_hoisted_8, _createVNode(_component_v_progress_circular, {\n      indeterminate: $data.switchMe,\n      size: \"24\",\n      class: \"loading-spinner\"\n    }, null, 8 /* PROPS */, [\"indeterminate\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\", \"onInput\"])]), $data.switchMe ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_createElementVNode(\"h1\", _hoisted_10, \"Use this to connect to MEP http://0.0.0.0:8000/\" + _toDisplayString($data.email) + \"/\", 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_11, [_createVNode(_component_v_btn, {\n    onClick: $options.downloadData\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Download Data\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_createVNode","_component_v_table","height","_hoisted_4","_Fragment","_renderList","$data","tableData","item","index","key","_toDisplayString","appId","request","erro","date","onClick","$event","$options","openPopupWindow","_hoisted_5","_hoisted_6","_hoisted_7","_component_v_switch","switchMe","onInput","handleSwitchChange","label","_withCtx","_hoisted_8","_component_v_progress_circular","indeterminate","size","_hoisted_9","_hoisted_10","email","_hoisted_11","_component_v_btn","downloadData"],"sources":["/home/bikes/Desktop/MECGIT/MEC-Factory/frontend/src/views/Mainpage.vue"],"sourcesContent":["\n<template>\n  <div class=\"page-container\">\n    <div class=\"left-column\">\n      <div class=\"section\">\n        <v-table  height=\"300px\">\n          <thead>\n            <tr>\n              <th>AppId</th>\n              <th>Request</th>\n              <th>Error Code</th>\n              <th>Date</th>\n              <th>More</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"(item, index) in tableData\" :key=\"index\">\n              <td>{{ item.appId }}</td>\n              <td>{{ item.request }}</td>\n              <td>{{ item.erro }}</td>\n              <td>{{ item.date }}</td>\n              <td>  \n              <button\n                @click=\"openPopupWindow(item)\"\n              >More</button>\n              </td>\n            </tr>\n          </tbody>\n        </v-table>\n      </div>\n    </div>\n    <div class=\"section\">\n      <div class=\"section switch-section\">\n      <v-switch   \n      v-model=\"switchMe\" class=\"custom-switch\"  @input=\"handleSwitchChange\">\n        <template v-slot:label >\n          <h1 class=\"white-text\">Turn On MEP</h1>\n          <v-progress-circular\n           \n            :indeterminate=\"switchMe\"\n            size=\"24\"\n            class=\"loading-spinner\"\n          ></v-progress-circular>\n        </template>\n      </v-switch>\n      </div>\n      <div v-if=\"switchMe\" >\n        <h1 class=\"white-texts\">Use this to connect to MEP http://0.0.0.0:8000/{{ email }}/</h1>\n      </div>\n      <div class=\"download\"> \n      <v-btn @click=\"downloadData\">Download Data</v-btn>\n    </div>\n    </div>  \n  </div>\n \n\n</template>\n\n<script>\n\nimport axios from 'axios';\nimport {ref} from \"vue\";\nimport { useUserStore } from '@/services/user-store';\n\n // Import your user store\n\nconst userStore = useUserStore();\n\n\nexport default {\n\n  data() {\n    return {\n      user:null,\n      switchMe: false,\n      email:localStorage.getItem(\"emaila\"),\n      tableData:[],\n      \n    };\n  },\n\n\n  mounted(){\n       \n    this.fetchData();\n    const serializedData = JSON.stringify(this.tableData);\n\n// Save the serialized data to local storage when the page unloads\nconst savedTableData = localStorage.getItem('tableData');\n  if (savedTableData) {\n    this.tableData = JSON.parse(savedTableData);\n    console.log(this.tableData)\n  }\n\n// Define um intervalo para buscar dados a cada 5 segundos (ou o valor que desejar)\n    setInterval(this.fetchData, 500); // 5000 milissegundos = 5 segundos\n  },\n  methods: {\n    handleSwitchChange() {\n      if (this.switchMe) {\n        this.handleSwitchOn();\n      } else {\n        this.handleSwitchOff();\n      }\n    },\n    handleSwitchOn() {\n      \n      console.log('Switch is ON (spinning)');\n    },\n    handleSwitchOff() {\n      // Function to execute when the switch is turned off (not spinning)\n      // Add your code here\n      console.log('Switch is OFF (not spinning)');\n    },\n\n    async downloadData() {\n      try {\n        // Realize uma chamada ao backend para obter os dados em um formato adequado\n        \n        const data = JSON.stringify(this.tableData, null, 2) // Assumindo que os dados são retornados no formato apropriado\n\n        // Crie um Blob com os dados\n        const blob = new Blob([data], { type: 'application/txt' });\n\n        // Crie uma URL temporária para o Blob\n        const url = window.URL.createObjectURL(blob);\n\n        // Crie um link de download e clique nele para iniciar o download\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = 'dados.txt';\n        document.body.appendChild(link);\n        link.click();\n\n        // Libere a URL temporária e remova o link\n        window.URL.revokeObjectURL(url);\n        document.body.removeChild(link);\n      } catch (error) {\n        console.error('Erro ao fazer o download:', error);\n      }\n    },\n    openPopupWindow(item) {\n      const userStore = useUserStore();\n      userStore.data=item;\n      \n      const routeData = this.$router.push({ name: 'more'});\n    \n    }, \n     async fetchData(){\n\n      \n      // Faz uma solicitação HTTP GET para buscar os dados do backend\n      try {\n              const response =  await axios({\n                method: 'GET',\n                url:'/data',\n                headers:{\n                  'Authorization':\"Bearer \" + userStore.token,\n                \n                },\n                params: {\n                     email: this.email, \n                  },\n              })\n             let found = false;\n             const data=JSON.stringify(response.data);\n           \n             if(response.data != null){\n                  for (let i = 0; i < this.tableData.length; i++) {\n                      const compare=JSON.stringify(this.tableData[i])\n                        if (compare=== data) {\n                           found = true;\n                           break;\n                        }\n                  }\n                 if(!found){\n                  const final=JSON.parse(data)\n                  this.tableData.unshift(final)\n                  localStorage.setItem('tableData', JSON.stringify(this.tableData));\n                 }\n             }\n    \n          } catch (error) {\n            console.error('Error fetching data:', error);\n          }\n    \n    }, \n    handleDirectoryChange(event) {\n      // Capture the selected directory and store it in selectedDirectory\n      this.selectedDirectory = event.target.files[0].webkitRelativePath;\n    },\n    saveData() {\n      if (!this.selectedDirectory) {\n        // Handle the case where no directory is selected\n        return;\n      }\n\n      // You can now access the selected directory using this.selectedDirectory\n      console.log(\"Selected directory:\", this.selectedDirectory);\n\n      // Implement your logic to save data to the selected directory here\n    },\n  }\n};\n   userStore.refreshToken();\n</script>\n\n\n\n\n\n<style scoped>\n\n.white-texts{\n  display: flex;\n  color: white;\n  font-size:20px;\n  margin-bottom:100px;\n}\n.page-container {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 0px; /* Adjust the gap as needed */\n  height: 100vh;\n}\n\n.left-column {\n  display: flex;\n  flex-direction: column;\n  align-items: center; /* Center contents horizontally */\n  justify-content: flex-start; /* Center contents vertically */\n  height: 100%; /* Make the left column fill the entire height of its container */\n  margin-top: 150px;\n}\n\n\n\n.download\n{\n  padding: 100px; /* Adjust the padding as needed */\n  margin-top: 0px; /* Add margin to move the table down */\n}\n\n.white-text {\n  color: white;\n  font-size:20px;\n  \n}\n\n\n.loading-spinner {\n  /* Rotate the loading spinner when the switch is toggled (green) */\n  animation: spin 1s linear infinite;\n  color:white;\n}\n\n@keyframes spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n.section {\n  padding: 20px;\n}\n.switch-section {\n  display: flex;\n  justify-content: flex-end; /* Position switch to the right */\n  align-items: center; /* Center switch vertically */\n  /* Add background color if needed */\n  padding: 100px; /* Add padding for spacing */\n}\n.hide-background {\n  display: flex;\n  background-color: transparent !important; /* Set background to transparent */\n}\n\n\n.custom-table {\n  height: 300px;\n  border-collapse: collapse; /* Collapse borders to prevent spacing */\n  width: 80%; /* Adjust the width as needed */\n  border: 2px solid black; /* Add black border to the table */\n}\n\n/* Add black borders to the table and its cells */\n\n\n</style>\n\n\n\n"],"mappings":";;;EAEOA,KAAK,EAAC;AAAgB;;EACpBA,KAAK,EAAC;AAAa;;EACjBA,KAAK,EAAC;AAAS;gEAEhBC,mBAAA,CAQQ,gB,aAPNA,mBAAA,CAMK,a,aALHA,mBAAA,CAAc,YAAV,OAAK,G,aACTA,mBAAA,CAAgB,YAAZ,SAAO,G,aACXA,mBAAA,CAAmB,YAAf,YAAU,G,aACdA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAa,YAAT,MAAI,E;;;EAmBbD,KAAK,EAAC;AAAS;;EACbA,KAAK,EAAC;AAAwB;gEAI/BC,mBAAA,CAAuC;EAAnCD,KAAK,EAAC;AAAY,GAAC,aAAW;;;;;EAWhCA,KAAK,EAAC;AAAa;;EAEpBA,KAAK,EAAC;AAAU;;;;;;uBA/CzBE,mBAAA,CAmDM,OAnDNC,UAmDM,GAlDJF,mBAAA,CA2BM,OA3BNG,UA2BM,GA1BJH,mBAAA,CAyBM,OAzBNI,UAyBM,GAxBJC,YAAA,CAuBUC,kBAAA;IAvBAC,MAAM,EAAC;EAAO;sBACtB,MAQQ,CARRC,UAQQ,EACRR,mBAAA,CAYQ,iB,kBAXNC,mBAAA,CAUKQ,SAAA,QAAAC,WAAA,CAVuBC,KAAA,CAAAC,SAAS,GAAzBC,IAAI,EAAEC,KAAK;2BAAvBb,mBAAA,CAUK;QAVmCc,GAAG,EAAED;MAAK,IAChDd,mBAAA,CAAyB,YAAAgB,gBAAA,CAAlBH,IAAI,CAACI,KAAK,kBACjBjB,mBAAA,CAA2B,YAAAgB,gBAAA,CAApBH,IAAI,CAACK,OAAO,kBACnBlB,mBAAA,CAAwB,YAAAgB,gBAAA,CAAjBH,IAAI,CAACM,IAAI,kBAChBnB,mBAAA,CAAwB,YAAAgB,gBAAA,CAAjBH,IAAI,CAACO,IAAI,kBAChBpB,mBAAA,CAIK,aAHLA,mBAAA,CAEc;QADXqB,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,eAAe,CAACX,IAAI;SAC7B,MAAI,iBAAAY,UAAA,E;;;;UAOfzB,mBAAA,CAqBM,OArBN0B,UAqBM,GApBJ1B,mBAAA,CAaM,OAbN2B,UAaM,GAZNtB,YAAA,CAWWuB,mBAAA;gBAVFjB,KAAA,CAAAkB,QAAQ;+DAARlB,KAAA,CAAAkB,QAAQ,GAAAP,MAAA;IAAEvB,KAAK,EAAC,eAAe;IAAG+B,OAAK,EAAEP,QAAA,CAAAQ;;IAC/BC,KAAK,EAAAC,QAAA,CACpB,MAAuC,CAAvCC,UAAuC,EACvC7B,YAAA,CAKuB8B,8BAAA;MAHpBC,aAAa,EAAEzB,KAAA,CAAAkB,QAAQ;MACxBQ,IAAI,EAAC,IAAI;MACTtC,KAAK,EAAC;;;kDAKDY,KAAA,CAAAkB,QAAQ,I,cAAnB5B,mBAAA,CAEM,OAAAqC,UAAA,GADJtC,mBAAA,CAAwF,MAAxFuC,WAAwF,EAAhE,iDAA+C,GAAAvB,gBAAA,CAAGL,KAAA,CAAA6B,KAAK,IAAG,GAAC,gB,wCAErFxC,mBAAA,CAEI,OAFJyC,WAEI,GADJpC,YAAA,CAAkDqC,gBAAA;IAA1CrB,OAAK,EAAEE,QAAA,CAAAoB;EAAY;sBAAE,MAAa,C,iBAAb,eAAa,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}