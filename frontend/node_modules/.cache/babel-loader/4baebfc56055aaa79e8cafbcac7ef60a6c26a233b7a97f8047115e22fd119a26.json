{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  // ... (other component code)\n\n  methods: {\n    async register() {\n      if (this.password !== this.passwordConfirmation) {\n        alert('Password and password confirmation do not match.');\n        return;\n      }\n      try {\n        const response = await axios.post('http://localhost:5000/api/v1/register', {\n          \"name\": this.name,\n          \"email\": this.email,\n          \"password\": this.password,\n          \"repassword\": this.passwordConfirmation\n        });\n        console.log('Registration successful:', response.data);\n        await this.$router.push({\n          path: \"/login\"\n        });\n      } catch (error) {\n        console.error('Registration failed:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","methods","register","password","passwordConfirmation","alert","response","post","name","email","console","log","data","$router","push","path","error"],"sources":["/home/bikes/Desktop/MECGIT/MEC-Factory/frontend/src/views/Register.vue"],"sourcesContent":["<template>\n  <div class=\"responsive-page\">\n    <div class=\"login-container\">\n      <h1 class=\"login-titles\">Registration Form</h1>\n      <form @submit.prevent=\"register\" class=\"login-form\">\n        <div class=\"form-group\">\n          <label for=\"name\" class=\"form-label\">Name:</label>\n          <input type=\"text\" id=\"name\" v-model=\"name\" class=\"form-input\" required />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"email\" class=\"form-label\">Email:</label>\n          <input type=\"email\" id=\"email\" v-model=\"email\" class=\"form-input\" required />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"password\" class=\"form-label\">Password:</label>\n          <input type=\"password\" id=\"password\" v-model=\"password\" class=\"form-input\" required />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"passwordConfirmation\" class=\"form-label\">Confirm Password:</label>\n          <input\n            type=\"password\"\n            id=\"passwordConfirmation\"\n            v-model=\"passwordConfirmation\"\n            class=\"form-input\"\n            required\n          />\n        </div>\n        <button type=\"submit\" class=\"login-button\">Register</button>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  // ... (other component code)\n\n  methods: {\n    async register() {\n      if (this.password !== this.passwordConfirmation) {\n        alert('Password and password confirmation do not match.');\n        return;\n      }\n\n      try {\n        const response = await axios.post('http://localhost:5000/api/v1/register', {\n          \"name\": this.name,\n           \"email\": this.email,\n          \"password\": this.password,\n          \"repassword\":this.passwordConfirmation\n        });\n        \n        console.log('Registration successful:', response.data);\n        await this.$router.push({path:\"/login\"});\n      } catch (error) {\n        console.error('Registration failed:', error);\n      }\n    },\n  },\n};\n</script>\n  \n  <style>\n  body {\n    margin: 0;\n    padding: 0;\n  }\n  \n  .responsive-page {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 84.5vh; /* Adjust height to cover the full viewport */\n    background-color: rgb(4, 26, 59);\n  }\n  \n\n  \n  .login-titles {\n    color: white;\n    display: flex;\n    margin-bottom: 20px ;\n    margin-left: 10px;\n    \n    \n  }\n  \n  .login-form {\n    display: flex;\n    flex-direction: column;\n  }\n  \n  .form-group {\n    margin-bottom: 16px;\n  }\n  \n  .form-label {\n    color: white;\n    \n  }\n  \n  .form-input {\n    width: 100%;\n    padding: 5px;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n  }\n  \n  .login-button {\n    background-color: #007bff;\n    color: white;\n    padding: 10px 20px;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    transition: background-color 0.3s ease;\n  }\n  \n  .login-button:hover {\n    background-color: #0056b3;\n  }\n  </style>\n  "],"mappings":";AAkCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACb;;EAEAC,OAAO,EAAE;IACP,MAAMC,QAAQA,CAAA,EAAG;MACf,IAAI,IAAI,CAACC,QAAO,KAAM,IAAI,CAACC,oBAAoB,EAAE;QAC/CC,KAAK,CAAC,kDAAkD,CAAC;QACzD;MACF;MAEA,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMN,KAAK,CAACO,IAAI,CAAC,uCAAuC,EAAE;UACzE,MAAM,EAAE,IAAI,CAACC,IAAI;UAChB,OAAO,EAAE,IAAI,CAACC,KAAK;UACpB,UAAU,EAAE,IAAI,CAACN,QAAQ;UACzB,YAAY,EAAC,IAAI,CAACC;QACpB,CAAC,CAAC;QAEFM,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEL,QAAQ,CAACM,IAAI,CAAC;QACtD,MAAM,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;UAACC,IAAI,EAAC;QAAQ,CAAC,CAAC;MAC1C,EAAE,OAAOC,KAAK,EAAE;QACdN,OAAO,CAACM,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}